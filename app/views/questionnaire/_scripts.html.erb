<script type="text/javascript">
num_questions = <%= [@questionnaire.questions.length,1].max %>;

function deleteQuestions(section_val){
	var checkedObjArray = new Array();
	var deleteCount = 0;
    var tbl;
    //alert(section_val);
    if( section_val == 0){
	   tbl = document.getElementById("questions_table");
        //alert("Normal Credit" + tbl.rows.length);
    }
    else{
       tbl = document.getElementById("ec_questions_table");
       //alert("Extra Credit" + tbl.rows.length);
    }
	var numChecks = 0;
    alert(document.forms[0].elements.length);
	for(i=0; i<document.forms[0].elements.length; i++){
		if(document.forms[0].elements[i].type=="checkbox" &&
		   document.forms[0].elements[i].id.substring(0,12)=="question_chk"){
			numChecks++;
            //alert("Inside one loop");
			if(document.forms[0].elements[i].checked==true){
                //alert("Inside second loop");
				tbl.deleteRow(numChecks+1);
				numChecks = 0;
				deleteQuestions(section_val);
			}
		}
	}
}

  function deleteRow() {
            //alert("Delete Row");
            try {
            var table = document.getElementById("ec_questions_table");
            var rowCount = table.rows.length;
            alert(rowCount);
            for(var i=0; i<rowCount; i++) {
                var row = table.rows[i];
                var chkbox = row.cells[0].childNodes[0];
                alert(chkbox.id);

                if(chkbox.type == "checkbox" && chkbox.checked) {
                    alert("Row : " + i);
                    table.deleteRow(i);
                    rowCount--;
                    i--;
                }

            }
            }catch(e) {
                alert(e);
            }
        }


function addQuestions(section_val){
    if( section_val == 0){
	    numQuestionsToAdd = parseInt(document.getElementById("numQuestionsToAdd").value);
    }else{
        numQuestionsToAdd = parseInt(document.getElementById("ec_numQuestionsToAdd").value);
    }
	for(i=0; i<numQuestionsToAdd; i++){
		addQuestion(section_val);
	}
}

function addQuestion(section_val){
    if ( section_val == 0 ) {
    	table = document.getElementById("questions_table");
    }
    else {
        table = document.getElementById("ec_questions_table");
    }

	var row = table.insertRow(-1);
	
	id = num_questions;
	column = document.createElement("td");
	column.innerHTML = "<center><input type='checkbox' id='question_chk" + num_questions + "'></center>";
	row.appendChild(column);
	
	column = document.createElement("td");
	column.innerHTML = "<input id=new_question_" + id + "_txt name=new_question[" + id + "][txt] size=70 type=text/>";
	row.appendChild(column);
	
	column = document.createElement("td");
	gradingTypes = "<select id=question_" + id + "_true_false name=new_question[" + id + "][true_false]>";
	<% for type in Question::GRADING_TYPES %>
		<%= "gradingTypes += '<option value=" + type[1].to_s + ">" + type[0].to_s + "</option>';"%>
	<% end %>
	gradingTypes += "</select>"
	column.innerHTML = gradingTypes;
	row.appendChild(column);
	
	column = document.createElement("td");
	weights = "<select id=new_question_" + id + "_weight name=new_question[" + id + 		"][weight]>";
	<% for weight in Question::WEIGHTS %>
		<%= "weights += '<option value=" + weight[1].to_s + ">" + weight[0].to_s + "</option>';"%>
	<% end %>
	weights = weights + "</select>";
	column.innerHTML = weights;
	row.appendChild(column);
	num_questions = num_questions + 1;

    column = document.createElement("td");
    section = column.innerHTML = "<input id=new_question_" + id + "_section name=new_question[" + id + "][section] size=70 type=hidden value="+section_val+"/>";
    column.innerHTML = section;
    row.appendChild(column);
}

</script>